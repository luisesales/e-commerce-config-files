server.port=8090

feign.circuitbreaker.enabled=true

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.datasource.url=jdbc:h2:mem:mcpdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update

eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=http://peer1:8761/eureka/,http://peer2:8762/eureka/,http://peer3:8763/eureka/


spring.ai.mcp.server.enabled=true
spring.ai.mcp.server.stdio=false
spring.ai.mcp.server.name=bankai-mcp-server
spring.ai.mcp.server.version=1.0.0
spring.ai.mcp.server.resource-change-notification=true
spring.ai.mcp.server.tool-change-notification=true
spring.ai.mcp.server.prompt-change-notification=true
spring.ai.mcp.server.sse-endpoint=/api/sse
spring.ai.mcp.server.sse-message-endpoint=/api/message
spring.ai.mcp.server.type=sync

spring.ai.mcp.server.capabilities.completion=true
spring.ai.mcp.server.capabilities.prompt=true
spring.ai.mcp.server.capabilities.resource=true
spring.ai.mcp.server.capabilities.tool=true


management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always

resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true

resilience4j.circuitbreaker.instances.cbStockGetAllProducts.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.cbStockGetAllProducts.slidingWindowSize=2
resilience4j.circuitbreaker.instances.cbStockGetAllProducts.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.cbStockGetAllProducts.failureRateThreshold=50
resilience4j.circuitbreaker.instances.cbStockGetAllProducts.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.cbStockGetAllProducts.registerHealthIndicator=true

resilience4j.bulkhead.instances.bhStockGetAllProducts.maxWaitDuration=2ms
resilience4j.bulkhead.instances.bhStockGetAllProducts.maxConcurrentCalls=20

resilience4j.retry.instances.rtStockGetAllProducts.maxAttempts=5
resilience4j.retry.instances.rtStockGetAllProducts.waitDuration=10000
resilience4j.retry.instances.rtStockGetAllProducts.intervalFunction.type=exponential
resilience4j.retry.instances.rtStockGetAllProducts.intervalFunction.exponential-backoff-multiplier=2
resilience4j.retry.instances.rtStockGetAllProducts.intervalFunction.max-interval=2000ms
resilience4j.retry.instances.rtStockGetAllProducts.retry-exceptions=java.util.concurrent.TimeoutException,java.net.ConnectException





resilience4j.circuitbreaker.instances.cbStockGetProductById.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.cbStockGetProductById.slidingWindowSize=2
resilience4j.circuitbreaker.instances.cbStockGetProductById.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.cbStockGetProductById.failureRateThreshold=50
resilience4j.circuitbreaker.instances.cbStockGetProductById.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.cbStockGetProductById.registerHealthIndicator=true

resilience4j.bulkhead.instances.bhStockGetProductById.maxWaitDuration=2ms
resilience4j.bulkhead.instances.bhStockGetProductById.maxConcurrentCalls=20

resilience4j.retry.instances.rtStockGetProductById.maxAttempts=5
resilience4j.retry.instances.rtStockGetProductById.waitDuration=10000
resilience4j.retry.instances.rtStockGetProductById.intervalFunction.type=exponential
resilience4j.retry.instances.rtStockGetProductById.intervalFunction.exponential-backoff-multiplier=2
resilience4j.retry.instances.rtStockGetProductById.intervalFunction.max-interval=2000ms
resilience4j.retry.instances.rtStockGetProductById.retry-exceptions=java.util.concurrent.TimeoutException,java.net.ConnectException





resilience4j.circuitbreaker.instances.cbStockOrderProduct.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.cbStockOrderProduct.slidingWindowSize=2
resilience4j.circuitbreaker.instances.cbStockOrderProduct.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.cbStockOrderProduct.failureRateThreshold=50
resilience4j.circuitbreaker.instances.cbStockOrderProduct.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.cbStockOrderProduct.registerHealthIndicator=true

resilience4j.bulkhead.instances.bhStockGetProductById.maxWaitDuration=2ms
resilience4j.bulkhead.instances.bhStockGetProductById.maxConcurrentCalls=20

resilience4j.retry.instances.rtStockOrderProduct.maxAttempts=5
resilience4j.retry.instances.rtStockOrderProduct.waitDuration=10000
resilience4j.retry.instances.rtStockOrderProduct.intervalFunction.type=exponential
resilience4j.retry.instances.rtStockOrderProduct.intervalFunction.exponential-backoff-multiplier=2
resilience4j.retry.instances.rtStockOrderProduct.intervalFunction.max-interval=2000ms
resilience4j.retry.instances.rtStockOrderProduct.retry-exceptions=java.util.concurrent.TimeoutException,java.net.ConnectException





resilience4j.circuitbreaker.instances.cbOrderGetAllOrders.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.cbOrderGetAllOrders.slidingWindowSize=2
resilience4j.circuitbreaker.instances.cbOrderGetAllOrders.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.cbOrderGetAllOrders.failureRateThreshold=50
resilience4j.circuitbreaker.instances.cbOrderGetAllOrders.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.cbOrderGetAllOrders.registerHealthIndicator=true

resilience4j.bulkhead.instances.bhOrderGetAllOrders.maxWaitDuration=2ms
resilience4j.bulkhead.instances.bhOrderGetAllOrders.maxConcurrentCalls=20

resilience4j.retry.instances.rtOrderGetAllOrders.maxAttempts=5
resilience4j.retry.instances.rtOrderGetAllOrders.waitDuration=10000
resilience4j.retry.instances.rtOrderGetAllOrders.intervalFunction.type=exponential
resilience4j.retry.instances.rtOrderGetAllOrders.intervalFunction.exponential-backoff-multiplier=2
resilience4j.retry.instances.rtOrderGetAllOrders.intervalFunction.max-interval=2000ms
resilience4j.retry.instances.rtOrderGetAllOrders.retry-exceptions=java.util.concurrent.TimeoutException,java.net.ConnectException





resilience4j.circuitbreaker.instances.cbOrderGetOrderById.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.cbOrderGetOrderById.slidingWindowSize=2
resilience4j.circuitbreaker.instances.cbOrderGetOrderById.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.cbOrderGetOrderById.failureRateThreshold=50
resilience4j.circuitbreaker.instances.cbOrderGetOrderById.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.cbOrderGetOrderById.registerHealthIndicator=true

resilience4j.bulkhead.instances.bhOrderGetOrderById.maxWaitDuration=2ms
resilience4j.bulkhead.instances.bhOrderGetOrderById.maxConcurrentCalls=20

resilience4j.retry.instances.rtOrderGetOrderById.maxAttempts=5
resilience4j.retry.instances.rtOrderGetOrderById.waitDuration=10000
resilience4j.retry.instances.rtOrderGetOrderById.intervalFunction.type=exponential
resilience4j.retry.instances.rtOrderGetOrderById.intervalFunction.exponential-backoff-multiplier=2
resilience4j.retry.instances.rtOrderGetOrderById.intervalFunction.max-interval=2000ms
resilience4j.retry.instances.rtOrderGetOrderById.retry-exceptions=java.util.concurrent.TimeoutException,java.net.ConnectException





resilience4j.circuitbreaker.instances.cbOrderCreateOrder.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.cbOrderCreateOrder.slidingWindowSize=2
resilience4j.circuitbreaker.instances.cbOrderCreateOrder.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.cbOrderCreateOrder.failureRateThreshold=50
resilience4j.circuitbreaker.instances.cbOrderCreateOrder.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.cbOrderCreateOrder.registerHealthIndicator=true

resilience4j.bulkhead.instances.bhOrderCreateOrder.maxWaitDuration=2ms
resilience4j.bulkhead.instances.bhOrderCreateOrder.maxConcurrentCalls=20

resilience4j.retry.instances.rtOrderCreateOrder.maxAttempts=5
resilience4j.retry.instances.rtOrderCreateOrder.waitDuration=10000
resilience4j.retry.instances.rtOrderCreateOrder.intervalFunction.type=exponential
resilience4j.retry.instances.rtOrderCreateOrder.intervalFunction.exponential-backoff-multiplier=2
resilience4j.retry.instances.rtOrderCreateOrder.intervalFunction.max-interval=2000ms
resilience4j.retry.instances.rtOrderCreateOrder.retry-exceptions=java.util.concurrent.TimeoutException,java.net.ConnectException